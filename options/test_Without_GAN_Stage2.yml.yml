# general settings
name: test_DM-CSwinSRS2
model_type: DiffIRGANS2Model
scale: 4
num_gpu: auto  # auto: can infer from your visible devices automatically. official: 4 GPUs
manual_seed: 0



# dataset and data loader settings
datasets:
  # Uncomment these for validation

  # test_1:
  #   name: Urban100
  #   type: PairedImageDataset
  #   dataroot_gt: /root/datasets/benchmark/Urban100/HR
  #   dataroot_lq: /root/datasets/benchmark/Urban100/LR
  #   # filename_tmpl: '{}x4'
  #   io_backend:
  #     type: disk


  # test_2:
  #   name: DIV2K100
  #   type: PairedImageDataset
  #   dataroot_gt: /root/datasets/benchmark/DIV2K100/HR
  #   dataroot_lq: /root/datasets/benchmark/DIV2K100/LR
  #   io_backend:
  #     type: disk
      
  test_1:
    name: DCSRD
    type: SingleImageDataset
    dataroot_lq: dataset/valsets/valX4
    io_backend:
      type: disk

#  test_2:
#    name: DIV2K100
#    type: SingleImageDataset
#    dataroot_lq: /root/datasets/benchmark/DIV2K100/LR
#    io_backend:
#      type: disk



# network structures
network_g:
  type: DiffIRS2
  n_encoder_res: 9
  inp_channels: 3
  out_channels: 3
  dim: 64
  num_blocks: [13,1,1,1]
  num_refinement_blocks: 13
  heads: [1,2,4,8]
  ffn_expansion_factor: 2.2
  bias: False
  LayerNorm_type: BiasFree
  n_denoise_res: 1
  linear_start: 0.1
  linear_end: 0.99
  timesteps: 4

# network structures
network_S1:
  type: DiffIRS1
  n_encoder_res: 9
  inp_channels: 3
  out_channels: 3
  dim: 64
  num_blocks: [13,1,1,1]
  num_refinement_blocks: 13
  heads: [1,2,4,8]
  ffn_expansion_factor: 2.2
  bias: False
  LayerNorm_type: BiasFree

network_d:
  type: UNetDiscriminatorSN
  num_in_ch: 3
  num_feat: 64
  skip_connection: True

# path
path:
  # use the pre-trained Real-ESRNet model
  pretrain_network_S1: models/net_g_s1.pth
  pretrain_network_g: models/net_g_s2.pth
  param_key_g: params_ema
  strict_load_g: False
  ignore_resume_networks: network_S1



val:
  window_size: 8
  save_img: True
  suffix: ~  # add suffix to saved images, if None, use exp name

  # metrics:
  #   psnr: # metric name
  #     type: calculate_psnr
  #     crop_border: 4
  #     test_y_channel: true
    




